// <auto-generated />
using System;
using J2.API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace J2.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230519170945_seedsChanged")]
    partial class seedsChanged
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("J2.API.Models.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2b80bfa8-ce9c-4d35-842d-a2dc1698b410"),
                            CreatedBy = new Guid("54a0b7e7-f4dd-47f3-89b0-b12752578ccc"),
                            CreatedOn = new DateTime(2023, 5, 19, 20, 39, 45, 520, DateTimeKind.Local).AddTicks(2406),
                            FirstName = "جورج",
                            LastName = "اورول"
                        },
                        new
                        {
                            Id = new Guid("3a08bfd7-7ceb-4797-8ff0-940f3a669fd0"),
                            CreatedBy = new Guid("54a0b7e7-f4dd-47f3-89b0-b12752578ccc"),
                            CreatedOn = new DateTime(2023, 5, 19, 20, 39, 45, 520, DateTimeKind.Local).AddTicks(2592),
                            FirstName = "جین",
                            LastName = "آستن"
                        });
                });

            modelBuilder.Entity("J2.API.Models.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DatePublished")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Isbn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4f9cfc10-a5a4-4ddc-9f77-6e214699fe6f"),
                            AuthorId = new Guid("3a08bfd7-7ceb-4797-8ff0-940f3a669fd0"),
                            DatePublished = new DateTime(2013, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genre = "رمان",
                            Isbn = "38298329",
                            Title = "غرور و تعصب"
                        },
                        new
                        {
                            Id = new Guid("27220a7d-abab-40d8-9882-77f55f80e497"),
                            AuthorId = new Guid("2b80bfa8-ce9c-4d35-842d-a2dc1698b410"),
                            DatePublished = new DateTime(2013, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Genre = "رمان",
                            Isbn = "12344",
                            Title = "1984"
                        });
                });

            modelBuilder.Entity("J2.API.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MembershipNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("54a0b7e7-f4dd-47f3-89b0-b12752578ccc"),
                            Email = "admin@example.com",
                            FirstName = "admin",
                            LastName = "admin",
                            MembershipNumber = "1",
                            PhoneNumber = "1213",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("J2.API.Models.Book", b =>
                {
                    b.HasOne("J2.API.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("J2.API.Models.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
